import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import java.util.*;

public class QuizApp extends JFrame implements Runnable {
    private static final String DB_URL = "jdbc:mysql://localhost:3306/QuizDB";
    private static final String USER = "root";
    private static final String PASSWORD = "Coolrupesh";

    private JLabel questionLabel;
    private JRadioButton optionA, optionB, optionC, optionD;
    private ButtonGroup optionsGroup;
    private JButton submitButton;

    private List<Question> questions;
    private int currentIndex = 0;
    private int score = 0;

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new Thread(new QuizApp()).start());
        SwingUtilities.invokeLater(() -> new Thread(new QuizApp()).start());
    }

    public QuizApp() {
        setTitle("Java Quiz System");
        setSize(600, 300);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        questionLabel = new JLabel("Loading...", JLabel.CENTER);
        questionLabel.setFont(new Font("Arial", Font.BOLD, 16));
        add(questionLabel, BorderLayout.NORTH);

        JPanel optionsPanel = new JPanel(new GridLayout(4, 1));
        optionA = new JRadioButton();
        optionB = new JRadioButton();
        optionC = new JRadioButton();
        optionD = new JRadioButton();

        optionsGroup = new ButtonGroup();
        optionsGroup.add(optionA);
        optionsGroup.add(optionB);
        optionsGroup.add(optionC);
        optionsGroup.add(optionD);

        optionsPanel.add(optionA);
        optionsPanel.add(optionB);
        optionsPanel.add(optionC);
        optionsPanel.add(optionD);
        add(optionsPanel, BorderLayout.CENTER);

        submitButton = new JButton("Submit");
        submitButton.addActionListener(e -> checkAnswer());
        add(submitButton, BorderLayout.SOUTH);

        fetchQuestions();
        displayQuestion();
        setVisible(true);
    }

    private void fetchQuestions() {
        questions = new ArrayList<>();
        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT * FROM questions")) {

            while (rs.next()) {
                questions.add(new Question(
                    rs.getString("question_text"),
                    rs.getString("optionA"),
                    rs.getString("optionB"),
                    rs.getString("optionC"),
                    rs.getString("optionD"),
                    rs.getString("correct_option")
                ));
            }
            Collections.shuffle(questions);
            questions = questions.subList(0, Math.min(10, questions.size()));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "DB Error: " + e.getMessage());
            System.exit(1);
        }
    }

    private void displayQuestion() {
        if (currentIndex < questions.size()) {
            Question q = questions.get(currentIndex);
            questionLabel.setText("Q" + (currentIndex + 1) + ": " + q.text);
            optionA.setText("A. " + q.optionA);
            optionB.setText("B. " + q.optionB);
            optionC.setText("C. " + q.optionC);
            optionD.setText("D. " + q.optionD);
            optionsGroup.clearSelection();
        } else {
            JOptionPane.showMessageDialog(this, "Quiz Over! Your Score: " + score + "/" + questions.size());
            dispose();
        }
    }

    private void checkAnswer() {
        Question q = questions.get(currentIndex);
        String selected = null;
        if (optionA.isSelected()) selected = "A";
        else if (optionB.isSelected()) selected = "B";
        else if (optionC.isSelected()) selected = "C";
        else if (optionD.isSelected()) selected = "D";

        if (selected != null && selected.equalsIgnoreCase(q.correct)) {
            score++;
        }
        currentIndex++;
        displayQuestion();
    }

    @Override
    public void run() {
        new QuizApp();
    }

    static class Question {
        String text, optionA, optionB, optionC, optionD, correct;
        Question(String t, String a, String b, String c, String d, String correct) {
            this.text = t; this.optionA = a; this.optionB = b;
            this.optionC = c; this.optionD = d; this.correct = correct;
        }
    }
}
